version: '3'
services:
  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_DB:        ${KONG_PG_DATABASE:-postgres}
      POSTGRES_USER:      ${KONG_PG_USER:-postgres}
      POSTGRES_PASSWORD:  ${KONG_PG_PASSWORD:-postgres}
    restart: on-failure
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - data:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
  web:
    container_name: web
    env_file: .env
    build:
      context: ./app
    command: unicorn -c config/unicorn.rb
    entrypoint: bin/wait-for-it.sh db:5432 -s --
    environment:
      DATABASE_URL: postgres://postgres:postgres@db/postgres
      RACK_ENV: development
      VIRTUAL_HOST: localhost
    expose:
      - '8080'
    links:
      - db
  scheduler:
    container_name: scheduler
    env_file: .env
    build:
      context: ./app
    command: bin/schedule
    entrypoint: bin/wait-for-it.sh db:5432 -s --
    environment:
      DATABASE_URL: postgres://postgres:postgres@db/postgres
      RACK_ENV: development
    links:
      - db
  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
#    links:
#      - web
#      - certbot
  certbot:
    container_name: certbot
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
#    links:
#      - nginx

volumes:
  data: